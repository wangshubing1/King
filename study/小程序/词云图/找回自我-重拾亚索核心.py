'''
 !/usr/bin/env python
 -*- coding: utf-8 -*-
 @Time    : 2018/6/22 14:38
 @Author  : King
 @Site    : 
 @File    : 找回自我-重拾亚索核心.py
 @Software: PyCharm Community Edition
 '''
from os import path
from scipy.misc import imread
import matplotlib.pyplot as plt
import jieba
from wordcloud import WordCloud


#text = cleaned_comments #文本数据
text = '''疾风剑豪·亚索是网络竞技游戏《英雄联盟》里面第117位英雄。

疾风剑豪·亚索主要造成物理伤害，护甲是最佳防御，他是一位近战爆发AD刺客，双突进的技能设置，使得他在中单游刃有余，

并且大招在队友的配合下，在团战中能够发挥至关重要的作用。

亚索是一个百折不屈的男人，还是一名身手敏捷的剑客，能够运用风的力量来斩杀敌人。

这位曾经春风得意的战士因为诬告而身败名裂，并且被迫卷入了一场令人绝望的生存之战。

即使整个世界都已与他为敌，他也要竭尽所能地去将罪恶绳之以法，并恢复自身的名誉。

亚索曾是艾欧尼亚某所知名剑术道场的天才学徒，并且还是同辈中唯一能够掌握传说中的御风剑术的学生。

大部分人曾相信他注定会成为一位伟大的英雄。

但是，因为诺克萨斯的入侵，他的命运被永久地改变了。

亚索在那时负责保护一位艾欧尼亚长者，但是，他自大地以为自己的剑能够改变战局，便擅离职守，投身于战场之中。

当他回到长者身边时，发现长者已被杀死。

身败名裂的亚索甘愿自首，准备用一生来补偿他的失职之罪。但是，他不单被控告玩忽职守，还被控告谋杀，这让他震惊不已。

尽管负罪感让他困惑不已、痛苦不堪，但他知道，如果他不作为的话，真正的刺客就会逍遥法外。

亚索拔剑而战，逃出道场，并且他非常清楚，自己又犯下了谋反罪，整个艾欧尼亚都会与他为敌了。

他第一次陷入真正的孤独境地，踏上了寻找杀害长老的真凶的人生旅程。

亚索接下来的数年都在各地流浪，搜寻着能够带他找到真凶的蛛丝马迹。

至始至终，他都在被昔日的同窗们无情地追捕着，不断地被迫作战，否则就会丧命。

他的使命驱使着他不断前行，直到他被最为可怕的对手——他的亲兄弟，永恩——所追上。

在传统礼教的束缚下，这两位剑客先是互相鞠躬，然后拔剑交战。在月光下，他们无声地将剑挥舞了一圈又一圈。

当他们最终向前冲锋时，永恩不敌亚索；剑光闪过，永恩就倒下了。亚索弃剑后冲到永恩旁边。

百感交集下，他询问自己的兄弟，他的亲人们怎么会认为他有罪。

永恩说：“长者死于御风剑术。还有谁能做到呢？”亚索瞬间明白了为何自己会被控告。

他再次声称自己是清白的，并且乞求他的兄弟原谅自己。随着他的兄弟在他的臂弯里永眠，他的泪水也在他的脸颊上滑落。

在旭日下，亚索埋葬了永恩，但他没有时间去悼念了。

很快就会有其他人来追捕他。兄弟的启示给了他全新的目标；他现在已经有了能够带他抓到真凶的线索。

他一边立誓，一边收拾行李，不舍地告别永恩之墓，在风的陪伴下踏上征程。

“剑之故事，以血为墨。”——亚索

你可以将敌方小兵作为踏前斩的跳板，来追杀本已逃掉的敌人；你也可以直接突进到对方英雄身上，并将敌方小兵作为撤退时的跳板。

在18级时，亚索的斩钢闪只需要从装备中获取 55% 攻击速度，即可到达攻击速度上限。

狂风绝息斩可以对着任何被击飞的目标施放，即使这个击飞效果是你的友军造成的。

折叠敌人使用斩钢闪的范围非常狭窄。尽可能靠边，就能躲过这招。

当亚索的斩钢闪连续命中两次时，他的下次斩钢闪就会形成一道旋风。要观察他的增益栏，并且留心聆听相关音效，做好躲避这招的准备。

亚索在发出旋风之后最为虚弱，可以趁机逼他交战。

亚索的百折不屈的护盾只持续2秒。对他造成伤害即可将护盾触发。先等护盾消失，然后再开战。

死亡如风，常伴吾身。
长路漫漫，唯剑作伴。
吾之荣耀，离别已久。
明日安在，无人能允。
且随疾风前行，身后亦须留心。
此剑之势，愈斩愈烈。
仁义道德，也是一种奢侈。
灭亡之路，短的超乎你的想象。
无罪之人，方可安睡。
正义，好个冠冕堂皇之词。
回首往昔，更进一步。
吾虽浪迹天涯，却未迷失本心。
'''

cut_text = ' '.join(jieba.lcut(text))
print(cut_text)
color_mask = imread("hasak.jpeg")
cloud = WordCloud(
    font_path='方正喵呜体.ttf',  # 字体最好放在与脚本相同的目录下，而且必须设置
    background_color='white',
    mask=color_mask,
    max_words=100,
    max_font_size=500
)
word_cloud = cloud.generate(cut_text)
plt.imshow(word_cloud)
plt.axis('off')
plt.show()